{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Documents\\\\initiative-tracker\\\\src\\\\components\\\\GridRow.js\";\n// GridRow.js\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GridRow({\n  onClearInitiatives\n}) {\n  // Function to handle input change and restrict to numbers\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    // Regular expression to allow only numeric input\n    const regex = /^[0-9\\b]+$/;\n\n    // If input value matches the regex or it's an empty string,\n    // update the state accordingly\n    if (value === \"\" || regex.test(value)) {\n      // Update state or perform any other action as needed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row form-inline\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        name: \"charactername\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        name: \"initiative\",\n        type: \"number\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        name: \"movement\",\n        type: \"number\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        name: \"hp\",\n        type: \"number\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        name: \"ac\",\n        type: \"number\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        name: \"conditions\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = GridRow;\nvar _c;\n$RefreshReg$(_c, \"GridRow\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GridRow","onClearInitiatives","handleInputChange","event","name","value","target","regex","test","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/thoma/Documents/initiative-tracker/src/components/GridRow.js"],"sourcesContent":["// GridRow.js\r\nimport React from \"react\";\r\n\r\nexport function GridRow({ onClearInitiatives }) {\r\n  // Function to handle input change and restrict to numbers\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    // Regular expression to allow only numeric input\r\n    const regex = /^[0-9\\b]+$/;\r\n\r\n    // If input value matches the regex or it's an empty string,\r\n    // update the state accordingly\r\n    if (value === \"\" || regex.test(value)) {\r\n      // Update state or perform any other action as needed\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row form-inline\">\r\n      <div className=\"col\">\r\n        <input\r\n          className=\"form-control\"\r\n          name=\"charactername\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"col\">\r\n        <input\r\n          className=\"form-control\"\r\n          name=\"initiative\"\r\n          type=\"number\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"col\">\r\n        <input\r\n          className=\"form-control\"\r\n          name=\"movement\"\r\n          type=\"number\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"col\">\r\n        <input\r\n          className=\"form-control\"\r\n          name=\"hp\"\r\n          type=\"number\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"col\">\r\n        <input\r\n          className=\"form-control\"\r\n          name=\"ac\"\r\n          type=\"number\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"col\">\r\n        <input\r\n          className=\"form-control\"\r\n          name=\"conditions\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}